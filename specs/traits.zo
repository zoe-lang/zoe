# Traits

trait Trait (
  # Traits define methods that are to be implemented
  # These two methods have no body and must thus be implemented
  method myMethod() -> Int,
  method anotherMethode() -> Char,

  # Could traits do that ??
  # and maybe have those used in generics ?
  # and thus define mehods that get added to the type that implements the trait ?
  fn staticFn() -> Void,
) {

  fn stuff() -> void {
    # ???
  }

  # Methods created by traits may be used in methods implementations
  # belonging to the trait.
  method dosomething() -> Int {
    return this.myMethod()
  }

}

# Traits may implement other traits.

# Traits are used in types right before defining
struct SomeStruct ()
implements Trait {

  # Trait methods
  method myMethod() -> Int {

  }

}

type Zobi is Pouet + Toto
