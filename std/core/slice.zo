import './iterator' (
  Iterable,
  Iterator
)

#(?
  Slices are kinda like arrays.
#)
struct Slice[$T] (
  length: Size,
  capacity: Size,
  ptr: @$T,
) {

  implement Iterable[$T] {
    method getIterator() { SliceIterator(slc = this, pos = 0) }
  }

  method bounds() -> Iterator[Int32] { iterate(0, this.length, 1) }


  #(?
    Iterate over a slide
  #)
  struct SliceIterator (
    slc: @Slice[$T],
    pos: Size,
  ) {
    implement Iterator[$T]

    method size() { this.slc.length }

    method next() {
      if this.pos < this.slc.length {
        this.pos++
        return this.slc[this.pos]
      }
      Iterator.Stop()
    }
  }

}
