
#(?
  ... !
#)
  #? Get the size of the ensemble being iterated over
trait Iterator[$T] {

  method next() -> $T

  implement Sliceable {
    fn zobi(arg1, arg2) {
      return 3
    }
  }

  method size() -> Size | Error {
    Iterator::Stop
  }
}


namespace iterator {

}

#(?
  Iterators... !
#)
trait Iterable[$T] {
  fn getIterator() -> Iterator@($T)
}
